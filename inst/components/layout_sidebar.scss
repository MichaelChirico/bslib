$bslib-sidebar-side-padding: $spacer * 1 !default;
$bslib-sidebar-main-padding: $spacer * 1.5 !default;
$bslib-sidebar-icon-size: 1.5rem !default;


.bslib-sidebar-layout {
  display: grid;
  position: fixed;
  inset: 0px;

  > .sidebar {
    padding: $bslib-sidebar-side-padding;
    display: flex;
    flex-direction: column;
    overflow: auto;

    > .accordion {
      margin: - $bslib-sidebar-side-padding;
      @extend .accordion-flush;
      .accordion-body {
        display: flex;
        flex-direction: column;
      }
    }

    // TODO: figure out how to properly transition. It seems, it we want to
    // use grid for the layout, then we'll need to change grid-template-columns
    // in order to do so https://stackoverflow.com/questions/43911880/using-css-transitions-in-css-grid-layout
    transition: none
  }

  --bslib-sidebar-collapse-transform: 90deg;

  // Collapse control is always in 1st row & column, we just change the absolute
  // position and transformed based on whether side is being shown
  > .sidebar-collapse {
    grid-row: 1 / 2;
    grid-column: 1 / 2;
    position: absolute;
    top: 0;
    right: 0;
    width: $bslib-sidebar-icon-size;
    height: $bslib-sidebar-icon-size;

    &::after {
      width: $bslib-sidebar-icon-size;
      height: $bslib-sidebar-icon-size;
      content: "";
      background-image:  #{escape-svg($accordion-button-icon)};
      background-repeat: no-repeat;
      background-size: $bslib-sidebar-icon-size;
      transform: rotate(var(--bslib-sidebar-collapse-transform));
    }

    display: none;
    &:hover {
      display: flex;
    }
  }

  .sidebar:hover ~ .sidebar-collapse {
    display: flex;
  }

  .sidebar:not(.show) ~ .sidebar-collapse {
    display: flex;
    --bslib-sidebar-collapse-transform: -90deg;
    right: initial;
  }

  > .main {
    padding: $bslib-sidebar-main-padding;
  }

  > .sidebar:not(.show) ~ .main {
    grid-column: 1 / 3;
  }
}


@include media-breakpoint-down(sm) {
  .bslib-sidebar-layout {
    display: block;
    position: relative;
    inset: unset;

    > .sidebar.show ~ .sidebar-collapse {
      --bslib-sidebar-collapse-transform: -180deg;
    }

    > .sidebar:not(.show) ~ .sidebar-collapse {
      --bslib-sidebar-collapse-transform: 0deg;
      right: 0;
    }
  }
}
