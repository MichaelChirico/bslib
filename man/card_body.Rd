% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/card.R
\name{card_body}
\alias{card_body}
\alias{card_body_scroll}
\alias{card_body_stretch}
\alias{card_body_inline}
\alias{card_title}
\alias{card_header}
\alias{card_footer}
\alias{card_spacer}
\alias{as.card_item}
\alias{is.card_item}
\title{Card item components}
\usage{
card_body(..., stretch = FALSE, class = NULL, padding = NULL)

card_body_scroll(..., height = NULL, class = NULL, padding = NULL)

card_body_stretch(..., flex = 1, class = NULL, padding = 0)

card_body_inline(..., stretch = FALSE, class = NULL, padding = NULL)

card_title(..., class = NULL, padding = NULL, container = htmltools::h5)

card_header(..., class = NULL, container = htmltools::div)

card_footer(..., class = NULL)

card_spacer(...)

as.card_item(x)

is.card_item(x)
}
\arguments{
\item{...}{Unnamed arguments should contain UI elements whose height (or width, if used within \code{card_body_inline()}) should be stretched, even if they already have a fixed height (e.g., \code{\link[shiny:plotOutput]{shiny::plotOutput()}}, etc. default to a fixed height of \verb{400px}). Named arguments are treated as attributes on the stretchy container.}

\item{stretch}{Set to \code{TRUE} if this \code{card_body} is eager to use any extra
vertical space is available in the card.}

\item{class}{Additional CSS classes.}

\item{padding}{A valid CSS \code{padding} value.}

\item{height}{Any valid \link[htmltools:validateCssUnit]{CSS unit}; for
example, \code{height="100\%"}.}

\item{flex}{a value of the \code{flex} CSS property.}

\item{container}{a function to generate an HTML element (used for the \code{.card-header} element)}

\item{x}{an object to test (or coerce to) a card item.}
}
\description{
This topic describes various components that are intended to go
directly inside of a \code{\link[=card]{card()}}. These components can be used in combination;
for example, a single card could contain a \code{card_header()}, a
\code{card_footer()}, and multiple \code{card_body()}s.

To learn more about \code{\link[=card]{card()}}s and card layout options, see \href{https://rstudio.github.io/bslib/articles/cards.html}{this article}.
}
\section{Stretchy card items (TODO}{
 put me in pkgdown article)
\itemize{
\item Stretchy card items only work sensibly if it has a parent element (e.g. \code{\link[=card]{card()}} and/or \code{\link[=card_grid]{card_grid()}}) which has a fixed height \emph{and} any elements in-between the fixed height element and the stretchy element are also stretchy.
\item Stretchy items \code{card_body_stretch()} is similar to \code{card_body(stretch =   TRUE)}, but additionally \code{unset}s the height of it's immediate children,
making it a convenient shortcut for creating stretchy outputs (e.g.,
\code{\link[shiny:plotOutput]{shiny::plotOutput()}}) without having to set \code{height="100\%"}.
\item By default, stretchy items stretch vertically, but they can also stretch horizontally
}
}

\seealso{
\code{\link[=card]{card()}} for creating a card component.

\code{\link[=card_grid]{card_grid()}} for laying out multiple cards.

\code{\link[=navs_tab_card]{navs_tab_card()}} \code{\link[=navs_pill_card]{navs_pill_card()}} for placing navigation in
cards.
}
